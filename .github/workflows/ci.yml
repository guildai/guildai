# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Run tests for CI

on: [push, pull_request]

concurrency: 
  group: ${{ github.head_ref }}
  cancel-in-progress: true

env:
  NON_INTERACTIVE_CI: true
  SKIP_NPM: "1"
  TERM: xterm-256color 
  WORKSPACE: test-env 
  UAT_SKIP: remote-*,hiplot-*
  COLUMNS: 999 
  EXAMPLES: examples 
  GUILD_START_THRESHOLD: 2.0 
  DASK_SPEEDUP_THRESHOLD: 1.2 

jobs:
  build:
    runs-on: ${{ matrix.sys.os }}
    strategy:
      fail-fast: false
      matrix:
       sys:
         - { os: windows-latest, shell: 'msys2 {0}' }
         - { os: ubuntu-latest,  shell: bash }
         - { os: macos-latest,   shell: bash }
       # 3.10 is blocked because we can't install a pandas wheel for our pinned version on py3.10
       python-version: ["3.6", "3.7", "3.8", "3.9"] 

    defaults:
      run:
        shell: ${{ matrix.sys.shell }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up msys2 for unix commands on windows
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
        with:
          update: true
          path-type: inherit  # NOTE: may cause DLL hell. If things are weird, this could be a culprit. This is how we allow python to be used, though. Without it, we'd need to install python with msys2
          install: >-
            base-devel
            bash
            findutils
      - name: Setup git user
        run: |
          git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
          git config --global init.defaultBranch main
      - name: Install/update pip, wheel and then build, install wheel
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python setup.py bdist_wheel
          python -m pip install --upgrade dist/*.whl
      - name: Run UAT tests
        run: |
          guild init -y --no-progress --name guild-test --guild dist/*.whl ./test-env
          source "$(find test-env -iname activate | awk '{ print length, $0 }' | sort -n -s | cut -d" " -f2- | head -n 1)"
          guild check -v --offline
          guild check --uat
      - name: upload coverage to Codecov
        uses: codecov/codecov-action@v2
